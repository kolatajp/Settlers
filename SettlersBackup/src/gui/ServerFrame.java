package gui;

import boardviewer.BoardViewerPanelManager;
import drawpanel.DrawPanel;
import java.util.Random;
import javax.swing.JOptionPane;
import mechanics.GameMechanics;
import net.ServerManager;
import parser.GUIParser;
import parser.Game;
import parser.GameParser;
import parser.OverParser;
import serializer.SaverLoader;

public class ServerFrame extends javax.swing.JFrame {

    //variables
    //kontrolki gry
    BoardViewerPanelManager bvpm;
    GameMechanics mechanics;
    Game game;
    GameParser gameParser;
    GUIParser guiParser;
    OverParser overParser;
    ServerManager serverManager;

    //pomocnicze
    int playerNumber = -1;
    String saveString;
    
    //obsluga gry poza powyzszymi
    int playerTurn = -1;
    int setupTurns = 0;
    int setupFinal = 0;
    int setupAdd = 1;

    /** Creates new form ServerFrame */
    public ServerFrame() {
        initComponents();

        //native init
        this.setLocationRelativeTo( null );
        
        this.consoleFrame.pack();
        this.consoleFrame.setLocationRelativeTo( null );

        //own init
        this.bvpm = new boardviewer.BoardViewerPanelManager( (DrawPanel) boardPanel, null );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        consoleFrame = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        passwordField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        consoleField = new javax.swing.JTextField();
        consoleToPlayersButton = new javax.swing.JButton();
        consoleToServerButton = new javax.swing.JButton();
        boardPanel = new DrawPanel();
        jLabel1 = new javax.swing.JLabel();
        logBox = new java.awt.TextArea();
        jLabel2 = new javax.swing.JLabel();
        chatBox = new java.awt.TextArea();
        reloadButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        start3MenuItem = new javax.swing.JMenuItem();
        start4MenuItem = new javax.swing.JMenuItem();
        optionsMenu = new javax.swing.JMenu();
        consoleMenuItem = new javax.swing.JMenuItem();

        consoleFrame.setTitle("Konsola");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Hasło"));

        passwordField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                passwordFieldPropertyChange(evt);
            }
        });
        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(passwordField)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Konsola"));

        consoleToPlayersButton.setText("Do graczy");
        consoleToPlayersButton.setEnabled(false);
        consoleToPlayersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consoleToPlayersButtonActionPerformed(evt);
            }
        });

        consoleToServerButton.setText("Do serwera");
        consoleToServerButton.setEnabled(false);
        consoleToServerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consoleToServerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(consoleField)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(consoleToPlayersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(consoleToServerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(consoleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consoleToPlayersButton)
                    .addComponent(consoleToServerButton)))
        );

        javax.swing.GroupLayout consoleFrameLayout = new javax.swing.GroupLayout(consoleFrame.getContentPane());
        consoleFrame.getContentPane().setLayout(consoleFrameLayout);
        consoleFrameLayout.setHorizontalGroup(
            consoleFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consoleFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(consoleFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        consoleFrameLayout.setVerticalGroup(
            consoleFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consoleFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Osadnicy serwer");

        boardPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout boardPanelLayout = new javax.swing.GroupLayout(boardPanel);
        boardPanel.setLayout(boardPanelLayout);
        boardPanelLayout.setHorizontalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 733, Short.MAX_VALUE)
        );
        boardPanelLayout.setVerticalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 716, Short.MAX_VALUE)
        );

        jLabel1.setText("Log");

        logBox.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        logBox.setMinimumSize(new java.awt.Dimension(70, 80));

        jLabel2.setText("Czat");

        chatBox.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        chatBox.setMinimumSize(new java.awt.Dimension(70, 80));

        reloadButton.setText("Przeładuj planszę");
        reloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadButtonActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("Gra");

        start3MenuItem.setText("Nowa gra na 3 graczy");
        start3MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start3MenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(start3MenuItem);

        start4MenuItem.setText("Nowa gra na 4 graczy");
        start4MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start4MenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(start4MenuItem);

        jMenuBar1.add(jMenu1);

        optionsMenu.setText("Opcje");

        consoleMenuItem.setText("Dev console");
        consoleMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consoleMenuItemActionPerformed(evt);
            }
        });
        optionsMenu.add(consoleMenuItem);

        jMenuBar1.add(optionsMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(reloadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chatBox, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logBox, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logBox, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chatBox, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reloadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startButton))
                    .addComponent(boardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void start3MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start3MenuItemActionPerformed
        //nowa gra na 3 graczy, inicjalizacja
        this.mechanics = new GameMechanics( 3 );
        this.game = new Game( this.mechanics );
        this.gameParser = new GameParser( this.game );
        this.bvpm = new boardviewer.BoardViewerPanelManager( (DrawPanel) boardPanel, this.mechanics );
        this.bvpm.initBoardPanel();
        //TODO
        this.guiParser = new GUIParser();
        this.guiParser.setBvpm( bvpm );
        this.overParser = new parser.OverParser( gameParser, guiParser, logBox, chatBox, null );
        
        //pomocniczo
        try {
            this.saveString = SaverLoader.save( mechanics );
        } catch ( java.io.IOException e ) {
            this.logBox.append( "Nie udało się sporządzić pakietu planszy " + "\n" + e + "\n" );
        }

        //inicjalizacja serwera
        this.serverManager = new net.ServerManager( 3, 9191, overParser, logBox );
        //test
        //wyslanie planszy / mapy
        this.serverManager.setSaveString( saveString );
        this.serverManager.start();
        
        //dodaje / ustawiam servermanager dla overParsera
        this.overParser.setServerManager( serverManager );

        //pomocnicze zmienne
        this.playerNumber = 3;
        
        //wylaczenie przyciskow nowej gry
        this.start3MenuItem.setEnabled( false );
        this.start4MenuItem.setEnabled( false );
    }//GEN-LAST:event_start3MenuItemActionPerformed

    private void start4MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start4MenuItemActionPerformed
        //nowa gra na 3 graczy, inicjalizacja
        this.mechanics = new GameMechanics( 4 );
        this.game = new Game( this.mechanics );
        this.gameParser = new GameParser( this.game );
        this.bvpm = new boardviewer.BoardViewerPanelManager( (DrawPanel) boardPanel, this.mechanics );
        this.bvpm.initBoardPanel();
        //TODO
        this.guiParser = new GUIParser();
        this.guiParser.setBvpm( bvpm );
        this.overParser = new parser.OverParser( gameParser, guiParser, logBox, chatBox, null );

        //pomocniczo
        try {
            this.saveString = SaverLoader.save( mechanics );
        } catch ( java.io.IOException e ) {
            this.logBox.append( "Nie udało się sporządzić pakietu planszy " + "\n" + e + "\n" );
        }

        //inicjalizacja serwera
        this.serverManager = new net.ServerManager( 4, 9191, overParser, logBox );
        //test
        //wyslanie planszy / mapy
        this.serverManager.setSaveString( saveString );
        this.serverManager.start();
        
        //dodaje / ustawiam servermanager dla overParsera
        this.overParser.setServerManager( serverManager );

        //pomocnicze zmienne
        this.playerNumber = 4;
        
        //wylaczenie przyciskow nowej gry
        this.start3MenuItem.setEnabled( false );
        this.start4MenuItem.setEnabled( false );
    }//GEN-LAST:event_start4MenuItemActionPerformed

    private void reloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadButtonActionPerformed
        this.mechanics = new GameMechanics(this.playerNumber);
        this.game = new Game( this.mechanics );
        this.gameParser = new GameParser( this.game );
        this.bvpm = new boardviewer.BoardViewerPanelManager( (DrawPanel) boardPanel, this.mechanics );
        this.bvpm.initBoardPanel();
        this.bvpm.reconsiderAll();
        this.bvpm.repaint();
        //TODO
        this.guiParser = new GUIParser();
        this.guiParser.setBvpm( bvpm );
        this.overParser = new parser.OverParser( gameParser, guiParser, logBox, chatBox, null );

        //pomocniczo
        try {
            this.saveString = SaverLoader.save( mechanics );
        } catch ( java.io.IOException e ) {
            this.logBox.append( "Nie udało się sporządzić pakietu planszy " + "\n" + e + "\n" );
        }
        
        try {
            this.serverManager.setSaveString( saveString );
            for ( int i=0; i<this.playerNumber; i++ ) {
                //deb
                System.out.println( i );
                this.serverManager.sendToClient( i, "9_server_v_" + saveString );
                this.logBox.append( "Wysłano na nowo planszę do gracza " + i + "\n" );
            }
        } catch ( java.lang.ArrayIndexOutOfBoundsException e ) {
            
        } catch ( java.lang.NullPointerException e ) {
            
        }
        
        //dodaje / ustawiam servermanager dla overParsera
        this.overParser.setServerManager( serverManager );

        //pomocnicze zmienne
        this.playerNumber = 4;
        
        //wylaczenie przyciskow nowej gry
        this.start3MenuItem.setEnabled( false );
        this.start4MenuItem.setEnabled( false );
    }//GEN-LAST:event_reloadButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        if ( this.serverManager.isAllClientsConnected() ) {
            //dezaktywacja przyciskow
            this.reloadButton.setEnabled( false );
            this.startButton.setEnabled( false );
            this.start3MenuItem.setEnabled( false );
            this.start4MenuItem.setEnabled( false );
            
            //losowanie zaczynajacego gracza
            this.playerTurn = new Random().nextInt( this.playerNumber );
            this.setupFinal = this.playerNumber;
            //ustawienie tego w overParserze
            this.overParser.setPlayerTurn( playerTurn );
            this.overParser.setSetupFinal( setupFinal );
            this.overParser.setSetupAdd( setupAdd );
            this.overParser.setSetupTurns( setupTurns );
            //powiadomienie do graczy oraz...
            this.serverManager.sendToAllClients( "9_server_l_Tura gracza " + this.playerTurn + ", ustawianie osady początkowej" );
            this.overParser.parse( "9_server_l_Tura gracza " + this.playerTurn + ", ustawianie osady początkowej" );
            //wyslanie do tego gracza informacji
            this.serverManager.sendToClient( playerTurn, "9_server_u_enablebuildRoadButton" );
            this.serverManager.sendToClient( playerTurn, "9_server_o_setup1" );
        } else {
            JOptionPane.showMessageDialog( rootPane, "Nie wszyscy gracze są połączeni" );
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void consoleToPlayersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consoleToPlayersButtonActionPerformed
        this.serverManager.sendToAllClients( this.consoleField.getText() );
    }//GEN-LAST:event_consoleToPlayersButtonActionPerformed

    private void passwordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyPressed
        /*
        if ( this.passwordField.getText().equals( "dev" ) ) {
            this.consoleToPlayersButton.setEnabled( true );
            this.consoleToServerButton.setEnabled( true );
        } else {
            this.consoleToPlayersButton.setEnabled( false );
            this.consoleToServerButton.setEnabled( false );
        }
        */
    }//GEN-LAST:event_passwordFieldKeyPressed

    private void consoleToServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consoleToServerButtonActionPerformed
        this.overParser.parse( this.consoleField.getText() );
    }//GEN-LAST:event_consoleToServerButtonActionPerformed

    private void consoleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consoleMenuItemActionPerformed
        this.consoleFrame.setVisible( true );
    }//GEN-LAST:event_consoleMenuItemActionPerformed

    private void passwordFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_passwordFieldPropertyChange
        
    }//GEN-LAST:event_passwordFieldPropertyChange

    private void passwordFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyTyped
       
    }//GEN-LAST:event_passwordFieldKeyTyped

    private void passwordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyReleased
        
        if ( this.passwordField.getText().equals( "dev" ) ) {
            this.consoleToPlayersButton.setEnabled( true );
            this.consoleToServerButton.setEnabled( true );
        } else {
            this.consoleToPlayersButton.setEnabled( false );
            this.consoleToServerButton.setEnabled( false );
        }
        
    }//GEN-LAST:event_passwordFieldKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] ) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() ) {
                if ( "Windows".equals( info.getName() ) ) {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        } catch ( ClassNotFoundException ex ) {
            java.util.logging.Logger.getLogger( ServerFrame.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( InstantiationException ex ) {
            java.util.logging.Logger.getLogger( ServerFrame.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( IllegalAccessException ex ) {
            java.util.logging.Logger.getLogger( ServerFrame.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( javax.swing.UnsupportedLookAndFeelException ex ) {
            java.util.logging.Logger.getLogger( ServerFrame.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater( new Runnable() {
            public void run() {
                new ServerFrame().setVisible( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boardPanel;
    private java.awt.TextArea chatBox;
    private javax.swing.JTextField consoleField;
    private javax.swing.JFrame consoleFrame;
    private javax.swing.JMenuItem consoleMenuItem;
    private javax.swing.JButton consoleToPlayersButton;
    private javax.swing.JButton consoleToServerButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private java.awt.TextArea logBox;
    private javax.swing.JMenu optionsMenu;
    private javax.swing.JTextField passwordField;
    private javax.swing.JButton reloadButton;
    private javax.swing.JMenuItem start3MenuItem;
    private javax.swing.JMenuItem start4MenuItem;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
